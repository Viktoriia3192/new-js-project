{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,S,E,S,E,S,E,QEAA,4CAA2C;AAE3C,kCAAkC;AAClC,+EAA+E;AAE/E,sCAAsC;AACtC,0BAA0B;AAE1B,gCAAgC;AAChC,4BAA4B;AAC5B,gEAAgE;AAChE,0DAA0D;AAC1D,8BAA8B;AAC9B,IAAI;AAEJ,qCAAqC;AACrC,iDAAiD;AACjD,yDAAyD;AAEzD,wCAAwC;AACxC,sFAAsF;AACtF,4CAA4C;AAE5C,8CAA8C;AAC9C,sCAAsC;AACtC,uDAAuD;AACvD,mGAAmG;AACnG,qDAAqD;AACrD,UAAU;AACV,MAAM;AAEN,wCAAwC;AACxC,+BAA+B;AAC/B,MAAM;AAEN,4DAA4D;AAC5D,6CAA6C;AAC7C,4CAA4C;AAC5C,2DAA2D;AAC3D,kCAAkC;AAClC,mEAAmE;AACnE,4EAA4E;AAC5E,MAAM;AACN,MAAM;ADhCN,+DAA+D;AAC/D,qEAAqE;AACrE,+DAA+D;AAC/D,yCAAyC;AAEzC,oBAAoB;AACpB,oDAAoD;AAEpD,8BAA8B;AAC9B,4BAA4B;AAC5B,uEAAuE;AACvE,4BAA4B;AAC5B,4BAA4B;AAC5B,IAAI;AACJ,+BAA+B;AAE/B,8BAA8B;AAC9B,gCAAgC;AAChC,6DAA6D;AAC7D,IAAI;AACJ,+BAA+B;AAK/B,iCAAiC;AACjC,YAAY;AACZ,uDAAuD;AACvD,oDAAoD;AACpD,wBAAwB;AACxB,2DAA2D;AAC3D,QAAQ;AACR,OAAO;AAEP,0BAA0B;AAC1B,YAAY;AACZ,2DAA2D;AAC3D,mFAAmF;AACnF,wBAAwB;AACxB,2DAA2D;AAC3D,QAAQ;AACR,OAAO;AAEP,qBAAqB;AACrB,YAAY;AACZ,YAAY;AACZ,OAAO;A,4E","sources":["<anon>","src/shopping_list_olexandr.js","src/js/pagination_mariia.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nparcelRequire(\"7Y9D8\");\nparcelRequire(\"5Szup\");\nparcelRequire(\"fewGv\");\nparcelRequire(\"dGLOO\");\n// import Pagination from 'tui-pagination';\n// // Отримати дані з localStorage\n// const shoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n// // Задати розмір порції на сторінці\n// const itemsPerPage = 3;\n// // Розподілити дані на порції\n// const paginatedData = [];\n// for (let i = 0; i < shoppingList.length; i += itemsPerPage) {\n//   const page = shoppingList.slice(i, i + itemsPerPage);\n//   paginatedData.push(page);\n// }\n// function displayPage(pageNumber) {\n//     // Отримати поточну порцію з paginatedData\n//     const currentPage = paginatedData[pageNumber - 1];\n//     // Очистити старий вміст сторінки\n//     const shoppingListContainer = document.getElementById('shoppingListContainer');\n//     shoppingListContainer.innerHTML = '';\n//     // Відобразити елементи поточної порції\n//     currentPage.forEach((item) => {\n//       const listItem = document.createElement('li');\n//       listItem.textContent = item.name; // Припускаючи, що у вас є поле \"name\" в об'єкті покупки\n//       shoppingListContainer.appendChild(listItem);\n//     });\n//   }\n//   function onPageChange(pageNumber) {\n//     displayPage(pageNumber);\n//   }\n//   // Приклад створення кнопок для переходу між сторінками\n//   const totalPages = paginatedData.length;\n//   for (let i = 1; i <= totalPages; i++) {\n//     const pageButton = document.createElement('button');\n//     pageButton.textContent = i;\n//     pageButton.addEventListener('click', () => onPageChange(i));\n//     document.getElementById('paginationButtons').appendChild(pageButton);\n//   }\n// // \n\n\n // const addBoock = document.querySelector(\".addNotification\");\n // const removeBoock = document.querySelector(\".removeNotification\");\n // const emptyList = document.querySelector(\".shop-list-empty\")\n // const LOCALSTORAGE_KEY = \"storageKey\";\n // updateAddBoock();\n // addBoock.addEventListener(\"submit\", saveAddBook);\n // function saveAddBook(evt) {\n //     evt.preventDefault();\n //     localStorage.setItem(LOCALSTORAGE_KEY, addBoock.elements.value);\n //         updateAddBoock();\n //         addBoock.reset();\n // }\n // console.log(updateAddBoock);\n // function updateAddBoock() {\n //     removeBoock.textContent =\n //     localStorage.getItem(LOCALSTORAGE_KEY) || (emptyList);\n // }\n // console.log(updateAddBoock);\n // const save = (key, value) => {\n //     try {\n //       const serializedState = JSON.stringify(value);\n //       localStorage.setItem(key, serializedState);\n //     } catch (error) {\n //       console.error(\"Set state error: \", error.message);\n //     }\n //   };\n //   const load = key => {\n //     try {\n //       const serializedState = localStorage.getItem(key);\n //       return serializedState === null ? undefined : JSON.parse(serializedState);\n //     } catch (error) {\n //       console.error(\"Get state error: \", error.message);\n //     }\n //   };\n //   export default {\n //     save,\n //     load,\n //   };\n\n\n//# sourceMappingURL=shopping_list_olexandr.69b7a191.js.map\n","\nimport axios from 'axios';\nimport Notiflix from 'notiflix';\n\nimport './js/header_hrebinchuk';\nimport './js/support_daryna';\nimport './js/dark_theme_max';\nimport './js/pagination_mariia';\n\n\n\n// const addBoock = document.querySelector(\".addNotification\");\n// const removeBoock = document.querySelector(\".removeNotification\");\n// const emptyList = document.querySelector(\".shop-list-empty\")\n// const LOCALSTORAGE_KEY = \"storageKey\";\n\n// updateAddBoock();\n// addBoock.addEventListener(\"submit\", saveAddBook);\n\n// function saveAddBook(evt) {\n//     evt.preventDefault();\n//     localStorage.setItem(LOCALSTORAGE_KEY, addBoock.elements.value);\n//         updateAddBoock();\n//         addBoock.reset();\n// }\n// console.log(updateAddBoock);\n\n// function updateAddBoock() {\n//     removeBoock.textContent =\n//     localStorage.getItem(LOCALSTORAGE_KEY) || (emptyList);\n// }\n// console.log(updateAddBoock);\n\n\n\n\n// const save = (key, value) => {\n//     try {\n//       const serializedState = JSON.stringify(value);\n//       localStorage.setItem(key, serializedState);\n//     } catch (error) {\n//       console.error(\"Set state error: \", error.message);\n//     }\n//   };\n  \n//   const load = key => {\n//     try {\n//       const serializedState = localStorage.getItem(key);\n//       return serializedState === null ? undefined : JSON.parse(serializedState);\n//     } catch (error) {\n//       console.error(\"Get state error: \", error.message);\n//     }\n//   };\n  \n//   export default {\n//     save,\n//     load,\n//   };","// import Pagination from 'tui-pagination';\n\n// // Отримати дані з localStorage\n// const shoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n\n// // Задати розмір порції на сторінці\n// const itemsPerPage = 3;\n\n// // Розподілити дані на порції\n// const paginatedData = [];\n// for (let i = 0; i < shoppingList.length; i += itemsPerPage) {\n//   const page = shoppingList.slice(i, i + itemsPerPage);\n//   paginatedData.push(page);\n// }\n\n// function displayPage(pageNumber) {\n//     // Отримати поточну порцію з paginatedData\n//     const currentPage = paginatedData[pageNumber - 1];\n  \n//     // Очистити старий вміст сторінки\n//     const shoppingListContainer = document.getElementById('shoppingListContainer');\n//     shoppingListContainer.innerHTML = '';\n  \n//     // Відобразити елементи поточної порції\n//     currentPage.forEach((item) => {\n//       const listItem = document.createElement('li');\n//       listItem.textContent = item.name; // Припускаючи, що у вас є поле \"name\" в об'єкті покупки\n//       shoppingListContainer.appendChild(listItem);\n//     });\n//   }\n\n//   function onPageChange(pageNumber) {\n//     displayPage(pageNumber);\n//   }\n  \n//   // Приклад створення кнопок для переходу між сторінками\n//   const totalPages = paginatedData.length;\n//   for (let i = 1; i <= totalPages; i++) {\n//     const pageButton = document.createElement('button');\n//     pageButton.textContent = i;\n//     pageButton.addEventListener('click', () => onPageChange(i));\n//     document.getElementById('paginationButtons').appendChild(pageButton);\n//   }\n// // "],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register"],"version":3,"file":"shopping_list_olexandr.69b7a191.js.map"}